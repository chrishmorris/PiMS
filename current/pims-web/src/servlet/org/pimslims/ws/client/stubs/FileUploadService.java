package org.pimslims.ws.client.stubs;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.5-hudson-$BUILD_NUMBER- Generated source version:
 * 2.1
 * 
 */
@WebServiceClient(name = "FileUploadService", targetNamespace = "http://server.ws.pimslims.org/", wsdlLocation = "http://localhost:8080/pims/FileUpload?wsdl")
public class FileUploadService extends Service {

    private final static URL FILEUPLOADSERVICE_WSDL_LOCATION;

    private final static Logger logger =
        Logger.getLogger(org.pimslims.ws.client.stubs.FileUploadService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.pimslims.ws.client.stubs.FileUploadService.class.getResource(".");
            //TODO fix  that, the path might be different 
            url = new URL(baseUrl, "http://localhost:8080/pims/FileUpload?wsdl");
        } catch (final MalformedURLException e) {
            FileUploadService.logger
                .warning("Failed to create URL for the wsdl Location: 'http://localhost:8080/pims/FileUpload?wsdl', retrying as a local file");
            FileUploadService.logger.warning(e.getMessage());
        }
        FILEUPLOADSERVICE_WSDL_LOCATION = url;
    }

    public FileUploadService(final URL wsdlLocation, final QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FileUploadService() {
        super(FileUploadService.FILEUPLOADSERVICE_WSDL_LOCATION, new QName("http://server.ws.pimslims.org/",
            "FileUploadService"));
    }

    /**
     * 
     * @return returns FileUpload
     */
    @WebEndpoint(name = "FileUploadPort")
    public FileUpload getFileUploadPort() {
        return super.getPort(new QName("http://server.ws.pimslims.org/", "FileUploadPort"), FileUpload.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported
     *            features not in the <code>features</code> parameter will have their default values.
     * @return returns FileUpload
     */
    @WebEndpoint(name = "FileUploadPort")
    public FileUpload getFileUploadPort(final WebServiceFeature... features) {
        return super.getPort(new QName("http://server.ws.pimslims.org/", "FileUploadPort"), FileUpload.class,
            features);
    }

}
