DATA MODEL

--------------------------------------------------------------------------------
-- Protocol package
--------------------------------------------------------------------------------
- referTo on Protocol to itself in order to be able to say that this protocol
"new PCR" refers to the general description of a PCR described previouly.
Cannot be handle with the ExperimentType?

- protocols are not editable.

- Protocol.WaitStep.location attribute replaced by a link to Location.Location?

- gel: another protocol

- protocols which use kit components?

-11- Workflow: How to link protocol together in order to build a workflow?

- Protocol.name should be unique

- Protocols should specify expected output samples


--------------------------------------------------------------------------------
-- Experiment package
--------------------------------------------------------------------------------
:: Experiment.InputSample.role - There should be predefined list with possibility to add the new values. 

:: Experiment.Experiment.status - should be a list of predefined values 


--------------------------------------------------------------------------------
-- Sample package
--------------------------------------------------------------------------------
- state = {solid, liquid, gaz} of a Sample
in Emerald the physical state is part of the chemical manager

:: Remove RefSampleSource: replaced by RefItem in StockTracking package.

:: Change the cardinality of the link between Sample and SampleLocation, the location should be a mandatory. The default location should really be configurable on a  per-user basis - someone working in Goods In or Stores would have a different requirement to someone working in the lab.

RHF: Tricky. SampleLocation is currently a child of Sample (though that could of course change). It requires a bit of hacking to have mandatory children (basically you have to create the child after you start creating the parent, but before you finish creating the parent and do the validity checking).Also there might be people (like academic NMR labs) that wanted to describe sample contents without having the overhead of making a full location tracking system.


:: AbstractSample.pH: Add constraint between 0 and 14

RHF: We are sure there will not be non-aqueous samples that go outside those limits?


:: Sample.Holder.positionsOrder	 - should have some predefined values. The String is probably wrong type for this. 

:: Concentration
Molar ("M") is the most common unit for concentration in lab practice, and is also an SI unit. The data model actually uses mol/m3.


--------------------------------------------------------------------------------
-- RefSampleComponent package
--------------------------------------------------------------------------------
:: Separating Biological/Chemical data in the data model
It seems that the concensus is that it is incorrect to inherit RestrictionEnzime, Construct, and Primer from the MolComponent. So it means that it would be better to have RestrictionEnzime, Construct, and Primer as separate classes in a separate package, with a link to MolComponent. In that way, RefSampleComponent would contain only  information relevant for the composition of samples, but not for particular scientific fields.

-01- If we do that, it still means that each time there is going to be an enzyme in a sample, there will be anyway the need to create a MolComponent. Would you really want to do that?  

:: RefSampleComponent.MolComponent.solubilityLevel suggestion are: {'soluble', 'partial', 'insoluble', 'others'}

RHF:
The subclasses should definitely disappear. Dividing all molecules in primers, constructs, restriction enzymes etc. is a way of tuning the model for cloning labs - and making it less useful for everyone else.
Fortunately Anne has come up with a way of handling the problem that gets rid of the subclasses and allows adding variuos kinds of features (primer diretion, restiction enzyme speficity etc.) 'in the field', without having to modify the model. It should be in one of her next mails.


--------------------------------------------------------------------------------
-- Molecule package
--------------------------------------------------------------------------------
:: new attr in Molecule class
	+ extinctionCoeff: Float (Unit M-1 cm-1)
	definition: The (molar) extinction coefficient of a protein can be estimated from a knowledge of its amino acid composition. The calculation is based on the number of tyrosine,  tryptophan and cystine residues it contains using the known molar extinction coefficients of these residues. The calculation forms part of the ExPASy ProtParam tool. E  (protein) = no. Tyr x E (Tyr) + no. Trp x E(Trp) + no. Cys x E(Cys)

RHF: Two comments:
If it is easily calculable, does it need to be stored?
At what frequency? That would differ for proteins, DNA, polystyrene, sugars, ... This seems to be an attribute specific to protein chemists, and should maybe not be put in a general model in this form


--------------------------------------------------------------------------------
-- Target package
--------------------------------------------------------------------------------
The idea here was indeed to handle targets and proteins separately. But, you have to store the protein sequence of the target by creating a Molecule (protein). And in fact, Target.seqString is a derived attribute from the mandatory link to Molecule. It is not stored in the Target class.

-02- If the separation between Target and Molecule class are not good enough, can someone suggest something better, please?

-10- Target.Target: there is a request to be able to record if a Target is an orthologue or paralogue of another. Would a one-to-many link on Target would solve the problem? Is there a generic way to give a name to this link: referTo, orthologueTo or paralogueTo?

PETR: In my opinion the orthologue and paralogue has no connection with the Target. It has connection with the protein and this information should be stored in the same place as the similar proteins. This is the question of how to store similar proteins in the data model.



--------------------------------------------------------------------------------
-- Taxonomy package
--------------------------------------------------------------------------------
:: split NaturalSource into 2 class:
(1) NaturalSource 
	+ organismName 
	+ ncbiTaxonomyId
	+ scientificName            
	+ genus               
	+ species                        
	+ organismAcronym       
	+ atccNumber                 
	+ ictvCode                      
	+ strain               
	+ cellLine                       
	+ cellType
	+ plasmid                       

(2) Location (or NaturalLocation) as a subclass of NaturalSource
	+ fraction                        
	+ cellLocation                
	+ geneMnemonic            
	+ organ               
	+ organelle                     
	+ tissue               
	+ variant             
	+ subVariant                   
	+ secretion

Remove plasmidDetails and details. 

RHF:
- You are the biologists, but I thought that variant and subvariant referred to the organism, not the location.
- A details field is always useful, you never know what extra information people might want to put in.
- I can see there is a split bwtween the organism and the location within the organism, but surely you do not want to have it as a subclass? If you want to split it you need two classes with a link between them. Say you have some compound from spinach, and only later do you find out it is only present in mitochindria. You would have no way of adding the information without deleting the original Source object and making a new one. Or you could leave things as they are and simply not fill in the fields you had no information for.


--------------------------------------------------------------------------------
-- Annotation package
--------------------------------------------------------------------------------
:: Rename MolFeature (linked to Molecule.MolResidue) to MolResFeature

:: Move RefSampleComponent.MolCompFeature to Annotation.MolFeature and create a link to Molecule.Molecule that can then be used to describe features of the Target in this way and remove the link to RefSampleComponent.MolComponent.

What is the reason behind the Annotation class? What kinds of annotations
are needed that must have their own external files, that can not be given
in a (large) text field? Or if this is for some kind of image (which),
why 'Annotation'? 

:: optional attribute: mime-type

- Url actually does not represent a complete file path, but rather a
directory or site. The idea is that file paths are split in two: an
absolute Url that indicates a sort of base address (class Url), and a path
relative to the base address (in AbstractStorage or DataLocation). In that
way it becomes easier to move data around, since you only change the base
address when you are e.g. moving a directory tree with thousands of
images, or moving your ChemComp server to a different Url, instead of
having to change each individual file path. Mime-type should maybe
belong to the individual file rather than to the site - to be considered

--------------------------------------------------------------------------------
-- Citation package
--------------------------------------------------------------------------------

:: Citation
	+ keywords – in the help text should contain the information about which delimiters users should use. For instance keywords might be the following: Cell division;  BarT protein location; BarT function description.
	+ status – should be list of predefined values 
	+ casAbstractCode – should contain the example 
	+ medLineUiCode - should contain the example 
	+ pubMedId - should contain the example 
	+ isPrimary  - need more explanation of what it is. 

-08- Can Rasmus give us more explanation of what Citation.isPrimary is? For instance, if Peter adds citation for the Target and think that this Citation is the most important one (the primary source of information on this Target) does he need to make it isPrimary=yes? 

RHF: isPrimary has nothing to do with the importance for a particular target.
The question is whether this is a primary reference (i.e. reports original
results) or a secondary reference (i.e. a review or compilation of results reported elsewhere). I have modified the documentation to make this clearer.


:: Citation.Citation.Status – should be list of predefined values 


--------------------------------------------------------------------------------
-- Instrument package
--------------------------------------------------------------------------------
It seems that the consensus is that items of small consumable equipment should be treated as instruments.
To monitor the number of units and their use, I propose to create a new StockTraking package (see below).
For reagents, 'purchasing' involves Experiment.ImportSample, because we need something similar for instruments, I suggest that can be handle by a generic ImportItem class.

:: Rename Instrument RefIntrument

:: New Instrument class
	+ code = code or barcode specific to a consumable equipement

:: select a Instrument capable of running a particular protocol.
-03- There are 2 options: (1) new attribute usedInExpTypes in RefInstrument or/and (2) a many-to-may link between RefInstrument & Protocol. What do you think?

:: Instrument.Instrument.instrumentType - should be predefined list with possibility to add new values. 

RHF:
I would favour a link between RefInstrument and Protocol. The ExpTypes are probably lab specific, as well as the rules for what experiments to do where. I think Protocols should know about INstruments, but not vice versa.


--------------------------------------------------------------------------------
-- StockTracking package                                 ** diagrams attached ** 
--------------------------------------------------------------------------------
Implementation of a stock tracking system via a usage count. This can be applied to track the stock of consumable equipment (Instrument), lab ware (Container, Holder, ...)  and Sample. Please have a look at the diagrams attached (200506-ItemTracking-details.gif & 200506-ItemTrackingRef-details.gif).

On receiving a new group of 100 identical items, you set purchasedNum to 100. On using an item you increase usedNum by one. On giving twenty to the lab next door you  decrease currentNum by 20. These attributes would also be useful for tracking how many times an item can be used before it needs recalibrating/washing/poking with a stick. 


:: RefItem
	+ catalogNum
	+ dataPageUrl
	+ description
	+ maxUsageNum = maximum number of times this instrument can be used (default = 1).
	+ unitPrice

:: Item
	+ purchasedNum
	+ currentNum = equal to purchasedNum at the beginning.
	+ usedNum = number of times this instrument has been used.
	+ availabilityNum = (currentNum x maxUsageNum) - usedNum
	+ unitPrice
	+ amount = purchasedNum x unitPrice

:: ImportItem
	+ dateOfImport
	+ subtotal = sum(Item.amount)
	+ vat
	+ total = subtotal + (subtotal x vat)

-04- Do you think this new StockTracking package is going to be useful and will solve the problems we are facing?

RHF: The idea is promising, but I think it still needs some thinking yet.
Having vendor catalogue number etc. stored in only one class is good.
Extending the Instrument class to cover concentrators and prepoured gels makes sense. But the Item class is tricky. Basically it covers a bunch of stuff bought together. So you cannot see how many concentrators you have, as they might have been bought separately. It tracks how many objects and uses are left, but if the objects are multiuse you cannot track which ones are still usable and which are used up. And you still have to create a separate Instrument or Sample record for each individual object.


--------------------------------------------------------------------------------
-- RefContainer package
--------------------------------------------------------------------------------
:: New RefLabWare class involved in the link with RefItem
	+ name
	+ labWareType
	+ capacity = number of subunits or volume
	+ details

:: Remove AbstractRefContainer, RefContainer, AbstractRefHolder & RefHolder

:: Rename RefCrystalContainer to RefCrystalHolder


--------------------------------------------------------------------------------
-- Pepople package
--------------------------------------------------------------------------------
:: People.Person.familyTitle - should be a list of predefined values title = {Mrs, Mr, Dr, Professor, ...}
